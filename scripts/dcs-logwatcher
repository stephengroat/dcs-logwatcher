#!/usr/bin/env python

import pyinotify
import os
import sys
import threading
import argparse
from logwatcher import QLock
from logwatcher import LogDirectory

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Process nginx logs to create statd summary every 5 seconds.')
    parser.add_argument('--output', default=sys.stdout,
                        help='path to output file to create or append to (default: stdout)')
    parser.add_argument('--status_url', default='5',
                        help='first digit of status code to display url detail (default: 5)')
    parser.add_argument('--mon_file', default='/var/log/nginx/access.log',
                        help='file to monitor (default: /var/log/ngninx/access.log)')

    args = parser.parse_args()

    wm = pyinotify.WatchManager()
    log = None
    # If file already exists, do not re-summarize by add to base log
    if os.path.isfile(args.mon_file):
        log = open(args.mon_file, 'r').readlines()
    notifier = pyinotify.ThreadedNotifier(wm,
                                          LogDirectory.LogDirectory(log=log,
                                                                    file_object=args.output,
                                                                    status_url=args.status_url,
                                                                    mon_file=os.path.abspath(args.mon_file)),
                                          read_freq=5)
    # Look at events every 5 seconds
    notifier.coalesce_events()
    try:
        wm.add_watch(os.path.dirname(os.path.abspath(args.mon_file)), pyinotify.ALL_EVENTS)
        notifier.loop()
    except OSError as e:
        print(e.errno)

